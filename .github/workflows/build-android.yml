name: Build Android APK

on:
  push:
    branches:
      - main
      - cursor/**
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'

    - name: Set up Android SDK
      uses: android-actions/setup-android@v2

    - name: Install Android SDK 30
      run: |
        yes | sdkmanager --licenses >/dev/null || true
        sdkmanager "platform-tools" "platforms;android-30" "build-tools;30.0.3"
        sdkmanager --list | head -n 50 || true

    - name: Compute timestamp and branch name
      id: meta
      shell: bash
      run: |
        TS=$(date +"%Y%m%d-%H%M")
        BR=builds/v${TS}
        echo "ts=${TS}" >> $GITHUB_OUTPUT
        echo "branch=${BR}" >> $GITHUB_OUTPUT

    - name: Create and push branch
      shell: bash
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@users.noreply.github.com"
        git checkout -b "${{ steps.meta.outputs.branch }}"
        git push origin "${{ steps.meta.outputs.branch }}"

    - name: Make gradlew executable
      run: chmod +x gradlew

    - name: Build release APK (app module)
      run: ./gradlew --no-daemon --info --warning-mode all app:assembleRelease

    - name: Align and sign APK with secrets
      env:
        KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD || 'android' }}
        KEY_ALIAS: remixkey
        KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD || secrets.ANDROID_KEYSTORE_PASSWORD || 'android' }}
      shell: bash
      run: |
        set -euo pipefail
        APK_DIR=app/build/outputs/apk/release
        APK_UNSIGNED=$APK_DIR/app-release-unsigned.apk
        APK_ALIGNED=$APK_DIR/${{ steps.meta.outputs.branch }}-aligned.apk
        APK_SIGNED=$APK_DIR/${{ steps.meta.outputs.branch }}.apk

        BUILD_TOOLS_DIR=$(ls -1d "$ANDROID_HOME"/build-tools/30.0.3 2>/dev/null | tail -n 1)
        ZIPALIGN_BIN="$BUILD_TOOLS_DIR/zipalign"
        APKSIGNER_BIN="$BUILD_TOOLS_DIR/apksigner"

        [ -f "$APK_UNSIGNED" ] || { echo "Missing input APK: $APK_UNSIGNED" >&2; ls -la "$APK_DIR" || true; exit 1; }

        # Keystore from secret
        echo "$KEYSTORE_BASE64" | base64 -d > keystore.jks

        # Align and verify
        "$ZIPALIGN_BIN" -v -p 4 "$APK_UNSIGNED" "$APK_ALIGNED"
        "$ZIPALIGN_BIN" -c -v 4 "$APK_ALIGNED"

        # Sign and verify
        "$APKSIGNER_BIN" sign --ks keystore.jks --ks-key-alias "$KEY_ALIAS" \
          --ks-pass pass:"$KEYSTORE_PASSWORD" --key-pass pass:"$KEY_PASSWORD" \
          --out "$APK_SIGNED" "$APK_ALIGNED"
        "$APKSIGNER_BIN" verify -v "$APK_SIGNED"
        ls -la "$APK_DIR"

    - name: Upload signed APK artifact
      uses: actions/upload-artifact@v3
      with:
        name: APK-builds-v${{ steps.meta.outputs.ts }}
        path: app/build/outputs/apk/release/${{ steps.meta.outputs.branch }}.apk
        retention-days: 30